from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import random
import os

TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = 1126977973  # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π Telegram ID
COUNTER_FILE = "counter.txt"

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–±–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞
def load_counter():
    if not os.path.exists(COUNTER_FILE):
        with open(COUNTER_FILE, 'w') as f:
            f.write("0")
    with open(COUNTER_FILE, 'r') as f:
        return int(f.read().strip())

def increment_counter():
    count = load_counter() + 1
    with open(COUNTER_FILE, 'w') as f:
        f.write(str(count))

# –°–ø–∏—Å–∫–∏ —Ñ—Ä–∞–∑
TEXT_REPLIES = [
    "ü¶Ö –ù–æ–≤–∏–Ω—É –ø—Ä–∏–π–Ω—è—Ç–æ! –ù–∞—à –æ—Ä–µ–ª –≤–∂–µ –Ω–∞—Ü—ñ–ª—é—î —Å–≤—ñ–π –≤—Å–µ–≤–∏–¥—é—á–∏–π –∑—ñ—Ä –Ω–∞ —Ñ–∞–∫—Ç–∏.",
    "üóûÔ∏è –î—è–∫—É—î–º–æ, –≥—Ä–æ–º–∞–¥—è–Ω–∏–Ω–µ. –ú–æ–∂–ª–∏–≤–æ, –≤–∏ —Ç—ñ–ª—å–∫–∏-–Ω–æ –∑–º—ñ–Ω–∏–ª–∏ —ñ—Å—Ç–æ—Ä—ñ—é.",
    "üïµÔ∏è‚Äç‚ôÇÔ∏è –†–µ–¥–∞–∫—Ü—ñ—è –ø—Ä–∞—Ü—é—î. –ê —Ç–∏ ‚Äî –º–æ–ª–æ–¥–µ—Ü—å.",
    "üìú –¢–µ–∫—Å—Ç –Ω–∞–¥—ñ–π—à–æ–≤, —Ç–∞—î–º–Ω–∏—Ü—ñ —Å–≤—ñ—Ç—É —Å–∫–æ—Ä–æ —Å—Ç–∞–Ω—É—Ç—å —è–≤–Ω–∏–º–∏.",
    "‚ö° –í–∞—à—ñ —Å–ª–æ–≤–∞ ‚Äî –Ω–∞—à–∞ –∑–±—Ä–æ—è —É –±–æ—Ä–æ—Ç—å–±—ñ –∑–∞ –ø—Ä–∞–≤–¥—É!"
]

PHOTO_REPLIES = [
    "üì∏ –§–æ—Ç–æ –ø—Ä–∏–π–Ω—è—Ç–æ! –û—Ä–ª–∏–Ω–∏–π –ø–æ–≥–ª—è–¥ –≤–∂–µ –∞–Ω–∞–ª—ñ–∑—É—î –∫–∞–¥—Ä.",
    "üñºÔ∏è –°–≤—ñ—Ç–ª–∏–Ω–∏ –Ω–∞–¥—ñ–π—à–ª–∏. –†–µ–¥–∞–∫—Ü—ñ—è –≤ –∑–∞—Ö–≤–∞—Ç—ñ –≤—ñ–¥ –¥–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—ó.",
    "üîç –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω–µ ‚Äî –∫–æ–∂–µ–Ω –ø—ñ–∫—Å–µ–ª—å –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª—ñ.",
    "ü¶Ö –ù–∞—à –æ—Ä–µ–ª –∑–ª–æ–≤–∏–≤ –∫–∞–¥—Ä —ñ –≤–∂–µ –≤–∏–≤—á–∞—î –≤—Å—ñ –Ω—é–∞–Ω—Å–∏.",
    "üì∑ –ö–∞–¥—Ä –∑—Ä–æ–±–ª–µ–Ω–æ! –ß–µ–∫–∞–π –Ω–∞ –≤–∏—Å–Ω–æ–≤–∫–∏ –≤—ñ–¥ –Ω–∞—à–∏—Ö –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤."
]

VOICE_REPLIES = [
    "üéôÔ∏è –ì–æ–ª–æ—Å –ø—Ä–∏–π–Ω—è—Ç–æ! –û—Ä–µ–ª –≤–∂–µ –ª–æ–≤–∏—Ç—å –∫–æ–∂–Ω–µ —Ç–≤–æ—î —Å–ª–æ–≤–æ.",
    "üîä –ú–æ–≤–ª–µ–Ω–Ω—è –∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ. –ù–∞—à—ñ –≤—É—Ö–∞ –∑–∞–≤–∂–¥–∏ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –¥–ª—è —Ç–µ–±–µ.",
    "ü¶â –¢–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚Äî —è–∫ —à–µ–ø—ñ—Ç –≤—ñ—Ç—Ä—É, –∞–ª–µ –º–∏ –π–æ–≥–æ –ø–æ—á—É–ª–∏ —á—ñ—Ç–∫–æ.",
    "üéß –ì–æ–ª–æ—Å –Ω–∞–¥—ñ–π—à–æ–≤. –†–µ–¥–∞–∫—Ü—ñ—è —É–≤–∞–∂–Ω–æ —Å–ª—É—Ö–∞—î –∫–æ–∂–Ω–µ —Å–ª–æ–≤–æ.",
    "üì¢ –¢–≤—ñ–π –≥–æ–ª–æ—Å ‚Äî —Å–∏–ª–∞. –î—è–∫—É—î–º–æ, —â–æ –¥–æ–≤—ñ—Ä—è—î—à –Ω–∞–º."
]

VIDEO_REPLIES = [
    "üé• –í—ñ–¥–µ–æ –ø—Ä–∏–π–Ω—è—Ç–æ! –û—Ä–µ–ª –≤–∂–µ –≤ –ø–æ–ª—å–æ—Ç—ñ, —â–æ–± –≤–∏–≤—á–∏—Ç–∏ –∫–æ–∂–µ–Ω –∫–∞–¥—Ä.",
    "üìΩÔ∏è –í—ñ–¥–µ–æ–º–∞—Ç–µ—Ä—ñ–∞–ª –æ—Ç—Ä–∏–º–∞–Ω–æ. –ü—Ä–∏–≥–æ—Ç—É–π—Ç–µ—Å—è –¥–æ —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è –ø–æ–¥—ñ–π!",
    "ü¶Ö –ù–∞—à –æ—Ä–µ–ª –∑–Ω—è–≤—Å—è –≤ —Ä–æ–ª—ñ —Ä–µ–∂–∏—Å–µ—Ä–∞ —ñ –≤–∂–µ –≤–∏–≤—á–∞—î —Å—é–∂–µ—Ç.",
    "üé¨ –ö—ñ–Ω–æ—Ö—Ä–æ–Ω—ñ–∫–∞ –ø—Ä–∏–π–Ω—è—Ç–∞! –û—á—ñ–∫—É–π –Ω–∞ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –≤–∏–ø—É—Å–∫.",
    "üì∫ –í—ñ–¥–µ–æ –æ—Ç—Ä–∏–º–∞–Ω–æ, –∑–∞—Ä–∞–∑ —Ä–µ–¥–∞–≥—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–∞–∑–æ–º —ñ–∑ —Ç–æ–±–æ—é."
]

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –í—ñ—Ç–∞—î–º–æ —É —Ä–µ–¥–∞–∫—Ü—ñ—ó –ù–°–õ–£–ü! –ù–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–∞–º —Å–≤–æ—é –Ω–æ–≤–∏–Ω—É, —ñ –º–∏ –ø–µ—Ä–µ–¥–∞–º–æ —ó—ó –Ω–∞—à–∏–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º."
    )

# /stats ‚Äî –∫—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–æ–≤–∏–Ω (–≤—ñ–¥–∫—Ä–∏—Ç–∞ –¥–ª—è –≤—Å—ñ—Ö)
async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    count = load_counter()
    await update.message.reply_text(f"üìä –ó–∞–≥–∞–ª–æ–º –æ—Ç—Ä–∏–º–∞–Ω–æ –Ω–æ–≤–∏–Ω: {count}")

# /answer [id] [—Ç–µ–∫—Å—Ç]
async def reply_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        return await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.")

    args = context.args
    if len(args) < 2:
        return await update.message.reply_text("‚ö†Ô∏è –§–æ—Ä–º–∞—Ç: /answer [user_id] [—Ç–µ–∫—Å—Ç]")

    user_id = args[0]
    reply_text = " ".join(args[1:])

    try:
        await context.bot.send_message(chat_id=int(user_id), text=f"üì¨ –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:\n{reply_text}")
        await update.message.reply_text("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ: {e}")

# –û–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message is None:
        return  # –Ü–≥–Ω–æ—Ä—É—î–º–æ, —è–∫—â–æ –Ω–µ–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

    user = update.message.from_user
    user_info = f"üë§ @{user.username or user.full_name}\nüÜî ID: {user.id}"
    text = update.message.text or ""
    photo = update.message.photo
    voice = update.message.voice
    video = update.message.video
    caption = update.message.caption or ""

    increment_counter()

    if photo:
        file_id = photo[-1].file_id  # –Ω–∞–π–±—ñ–ª—å—à–µ —Ñ–æ—Ç–æ
        await context.bot.send_photo(
            chat_id=ADMIN_ID,
            photo=file_id,
            caption=f"üñºÔ∏è –ù–æ–≤–∞ –Ω–æ–≤–∏–Ω–∞ –∑ —Ñ–æ—Ç–æ:\n\n{user_info}\nüí¨ {caption if caption else '[–ë–µ–∑ –ø—ñ–¥–ø–∏—Å—É]'}"
        )
        await update.message.reply_text(random.choice(PHOTO_REPLIES))

    elif voice:
        await context.bot.send_voice(
            chat_id=ADMIN_ID,
            voice=voice.file_id,
            caption=f"üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥:\n\n{user_info}"
        )
        await update.message.reply_text(random.choice(VOICE_REPLIES))

    elif video:
        await context.bot.send_video(
            chat_id=ADMIN_ID,
            video=video.file_id,
            caption=f"üé• –í—ñ–¥–µ–æ –≤—ñ–¥:\n\n{user_info}\nüí¨ {caption if caption else '[–ë–µ–∑ –ø—ñ–¥–ø–∏—Å—É]'}"
        )
        await update.message.reply_text(random.choice(VIDEO_REPLIES))

    else:
        # –¢–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        if text.strip():
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=f"üì® –ù–æ–≤–∞ –Ω–æ–≤–∏–Ω–∞:\n\n{user_info}\nüí¨ {text}"
            )
            await update.message.reply_text(random.choice(TEXT_REPLIES))

if __name__ == '__main__':
    if TOKEN is None:
        print("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∏–π –≤ —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ!")
        import sys
        sys.exit(1)


    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("answer", reply_command))
    app.add_handler(CommandHandler("stats", stats))
    app.add_handler(MessageHandler(filters.ALL, handle_messages))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    app.run_polling()
